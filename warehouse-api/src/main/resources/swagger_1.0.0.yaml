openapi: 3.0.3
info:
  title: Warehouse Service 1.0
  version: 0.0.1
tags:
  - name: Warehouse Service
    description: Warehouse internal APIs

paths:
  /owner/user:
    post:
      tags:
        - Warehouse Service
      operationId: create-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserId'
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Authentication Error
        '403':
          description: Signature error
        '500':
          description: Internal Server Error
  /owner/products:
    get:
      tags:
        - Warehouse Service
      operationId: get-owner-products
      parameters:
        - $ref: "#/components/parameters/OwnerId"
        - $ref: "#/components/parameters/WarehouseId"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductsResponse'
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Authentication Error
        '403':
          description: Signature error
        '500':
          description: Internal Server Error
  /user/products:
    get:
      tags:
        - Warehouse Service
      operationId: get-user-products
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductsResponse'
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Authentication Error
        '403':
          description: Signature error
        '500':
          description: Internal Server Error
    post:
      tags:
        - Warehouse Service
      operationId: create-user-products
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserProductsRequest"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductId'
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Authentication Error
        '403':
          description: Signature error
        '500':
          description: Internal Server Error
  /warehouse:
    get:
      tags:
        - Warehouse Service
      operationId: get-list-warehouse
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseResponse'
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Authentication Error
        '403':
          description: Signature error
        '500':
          description: Internal Server Error
components:
  parameters:
    UserId:
      name: UserId
      in: query
      required: true
      description: "User Id"
      schema:
        maxLength: 50
        type: string
    OwnerId:
      name: OwnerId
      in: header
      required: true
      description: "Owner Id"
      schema:
        maxLength: 50
        type: string
    WarehouseId:
      name: WarehouseId
      in: header
      required: true
      description: "Warehouse Id"
      schema:
        maxLength: 50
        type: string

  schemas:
    CreateUserRequest:
      type: object
      required:
        - name
        - phoneNumber
        - password
      description: "Информация о продукте"
      properties:
        password:
          type: string
          maxLength: 100
        name:
          type: string
          maxLength: 100
        phoneNumber:
          type: string
          maxLength: 20
        role:
          type: string
          maxLength: 50
    SetProductInWarehouseRequest:
      type: object
      required:
        - productId
        - warehouseId
      description: "Информация о продукте"
      properties:
        productId:
          $ref: '#/components/schemas/ProductId'
        warehouseId:
          type: string
          maxLength: 50
    CreateUserProductsRequest:
      type: object
      required:
        - uniqProductId
        - userId
        - name
      description: "Информация о продукте"
      properties:
        userId:
          type: string
          maxLength: 50
        uniqProductId:
          type: string
          maxLength: 50
        name:
          type: string
          maxLength: 100
        warehouseId:
          nullable: true
          type: string
          maxLength: 50
    UserId:
      type: string
      maxLength: 50
      description: "ProductId"
    ProductId:
      type: string
      maxLength: 50
      description: "ProductId"
    GetProductsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    Product:
      type: object
      required:
        - uniqProductId
        - name
        - warehouseId
      description: "Информация о продукте"
      properties:
        uniqProductId:
          type: string
          maxLength: 50
        name:
          type: string
          maxLength: 100
        warehouseId:
          type: string
          maxLength: 50
        producerId:
          type: string
          maxLength: 50
    WarehouseResponse:
      type: array
      items:
        $ref: '#/components/schemas/Warehouse'
    Warehouse:
      type: object
      description: "Информация о складах"
      properties:
        country:
          type: string
          maxLength: 100
        city:
          type: string
          maxLength: 50
        size:
          type: integer
          maxLength: 50
        phoneNumber:
          type: string
          maxLength: 20
        ownerId:
          type: string
          maxLength: 20